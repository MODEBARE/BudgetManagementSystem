@using BudgetSystem.Models.ViewModels
@model TransactionListViewModel
@{
    ViewData["Title"] = "Transaction History";
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body bg-primary text-white rounded">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h3 class="fw-bold mb-1">
                                <i class="fas fa-history me-2"></i>Transaction History
                            </h3>
                            <p class="mb-0 opacity-75">View and manage all your income and expense transactions</p>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="d-flex gap-2 justify-content-end">
                                <a href="@Url.Action("AddIncome", "Transactions")" class="btn btn-success">
                                    <i class="fas fa-plus me-1"></i>Add Income
                                </a>
                                <a href="@Url.Action("AddExpense", "Transactions")" class="btn btn-danger">
                                    <i class="fas fa-minus me-1"></i>Add Expense
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-success bg-opacity-10 rounded-circle p-3">
                                <i class="fas fa-plus-circle fa-lg text-success"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="fw-bold mb-0">Total Income</h6>
                            <h4 class="text-success fw-bold mb-0">@Model.GetCurrencySymbol()@Model.Summary.TotalIncome.ToString("N2")</h4>
                            <small class="text-muted">@Model.Summary.IncomeCount transaction(s)</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-danger bg-opacity-10 rounded-circle p-3">
                                <i class="fas fa-minus-circle fa-lg text-danger"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="fw-bold mb-0">Total Expenses</h6>
                            <h4 class="text-danger fw-bold mb-0">@Model.GetCurrencySymbol()@Model.Summary.TotalExpenses.ToString("N2")</h4>
                            <small class="text-muted">@Model.Summary.ExpenseCount transaction(s)</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-info bg-opacity-10 rounded-circle p-3">
                                <i class="fas fa-calculator fa-lg text-info"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="fw-bold mb-0">Net Amount</h6>
                            <h4 class="@(Model.Summary.NetAmount >= 0 ? "text-success" : "text-danger") fw-bold mb-0">
                                @(Model.Summary.NetAmount >= 0 ? "+" : "")@Model.GetCurrencySymbol()@Model.Summary.NetAmount.ToString("N2")
                            </h4>
                            <small class="text-muted">@Model.Summary.TotalCount total transaction(s)</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="bg-warning bg-opacity-10 rounded-circle p-3">
                                <i class="fas fa-calendar fa-lg text-warning"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="fw-bold mb-0">Period</h6>
                            <h5 class="fw-bold mb-0 text-dark">
                                @if (Model.Filters.FromDate.HasValue || Model.Filters.ToDate.HasValue)
                                {
                                    <span>@(Model.Filters.FromDate?.ToString("MMM dd") ?? "Start") - @(Model.Filters.ToDate?.ToString("MMM dd") ?? "Now")</span>
                                }
                                else
                                {
                                    <span>All Time</span>
                                }
                            </h5>
                            <small class="text-muted">Date range</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="fw-bold mb-0">
                <i class="fas fa-filter me-2"></i>Filters & Search
            </h5>
        </div>
        <div class="card-body">
            <form method="get" action="@Url.Action("Index")">
                <div class="row g-3">
                    <!-- Search -->
                    <div class="col-md-4">
                        <label asp-for="Filters.SearchTerm" class="form-label fw-semibold">Search</label>
                        <input asp-for="Filters.SearchTerm" class="form-control" placeholder="Search description, notes, reference..." />
                    </div>
                    
                    <!-- Type -->
                    <div class="col-md-2">
                        <label asp-for="Filters.Type" class="form-label fw-semibold">Type</label>
                        <select asp-for="Filters.Type" asp-items="Model.TypeOptions" class="form-select"></select>
                    </div>
                    
                    <!-- Account -->
                    <div class="col-md-3">
                        <label asp-for="Filters.AccountId" class="form-label fw-semibold">Account</label>
                        <select asp-for="Filters.AccountId" asp-items="Model.AccountOptions" class="form-select">
                            <option value="">All Accounts</option>
                        </select>
                    </div>
                    
                    <!-- Category -->
                    <div class="col-md-3">
                        <label asp-for="Filters.Category" class="form-label fw-semibold">Category</label>
                        <select asp-for="Filters.Category" asp-items="Model.CategoryOptions" class="form-select">
                            <option value="">All Categories</option>
                        </select>
                    </div>
                </div>
                
                <div class="row g-3 mt-2">
                    <!-- Date Range -->
                    <div class="col-md-2">
                        <label asp-for="Filters.FromDate" class="form-label fw-semibold">From Date</label>
                        <input asp-for="Filters.FromDate" class="form-control" type="date" />
                    </div>
                    
                    <div class="col-md-2">
                        <label asp-for="Filters.ToDate" class="form-label fw-semibold">To Date</label>
                        <input asp-for="Filters.ToDate" class="form-control" type="date" />
                    </div>
                    
                    <!-- Amount Range -->
                    <div class="col-md-2">
                        <label asp-for="Filters.MinAmount" class="form-label fw-semibold">Min Amount</label>
                        <input asp-for="Filters.MinAmount" class="form-control" type="number" step="0.01" placeholder="0.00" />
                    </div>
                    
                    <div class="col-md-2">
                        <label asp-for="Filters.MaxAmount" class="form-label fw-semibold">Max Amount</label>
                        <input asp-for="Filters.MaxAmount" class="form-control" type="number" step="0.01" placeholder="0.00" />
                    </div>
                    
                    <!-- Options -->
                    <div class="col-md-4">
                        <label class="form-label fw-semibold">Options</label>
                        <div>
                            <div class="form-check form-check-inline">
                                <input asp-for="Filters.ShowRecurringOnly" class="form-check-input" type="checkbox" />
                                <label asp-for="Filters.ShowRecurringOnly" class="form-check-label">Recurring Only</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input asp-for="Filters.ShowWithReceiptsOnly" class="form-check-input" type="checkbox" />
                                <label asp-for="Filters.ShowWithReceiptsOnly" class="form-check-label">With Receipts</label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row mt-3">
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i>Apply Filters
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary ms-2">
                            <i class="fas fa-times me-1"></i>Clear Filters
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Transactions Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white d-flex justify-content-between align-items-center">
            <h5 class="fw-bold mb-0">
                Transactions (@Model.Pagination.StartRecord - @Model.Pagination.EndRecord of @Model.Pagination.TotalCount)
            </h5>
            <div class="d-flex gap-2 align-items-center">
                <!-- Export Buttons -->
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-download me-1"></i>Export
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <a class="dropdown-item" href="@Url.Action("ExportCsv", "Transactions", Model.Filters)">
                                <i class="fas fa-file-csv me-2 text-success"></i>Export to CSV
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="@Url.Action("ExportPdf", "Transactions", Model.Filters)">
                                <i class="fas fa-file-pdf me-2 text-danger"></i>Export to PDF
                            </a>
                        </li>
                    </ul>
                </div>
                
                <!-- Sort Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-sort me-1"></i>Sort By
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "TransactionDate", sortOrder = "desc" })">Date (Newest)</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "TransactionDate", sortOrder = "asc" })">Date (Oldest)</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "Amount", sortOrder = "desc" })">Amount (High to Low)</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "Amount", sortOrder = "asc" })">Amount (Low to High)</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "Description", sortOrder = "asc" })">Description (A-Z)</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { filters = Model.Filters, sortBy = "Category", sortOrder = "asc" })">Category (A-Z)</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Transactions.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-light">
                            <tr>
                                <th>Date</th>
                                <th>Description</th>
                                <th>Category</th>
                                <th>Account</th>
                                <th class="text-end">Amount</th>
                                <th class="text-center">Receipt</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in Model.Transactions)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="badge bg-@(transaction.Type == TransactionType.Credit ? "success" : "danger") me-2">
                                                <i class="fas @(transaction.Type == TransactionType.Credit ? "fa-plus" : "fa-minus")"></i>
                                            </span>
                                            <div>
                                                <div class="fw-semibold">@transaction.TransactionDate.ToString("MMM dd, yyyy")</div>
                                                <small class="text-muted">@transaction.TransactionDate.ToString("h:mm tt")</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div class="fw-semibold">@transaction.Description</div>
                                            @if (!string.IsNullOrEmpty(transaction.Reference))
                                            {
                                                <small class="text-muted">Ref: @transaction.Reference</small>
                                            }
                                            @if (transaction.IsRecurring)
                                            {
                                                <span class="badge bg-info ms-1">
                                                    <i class="fas fa-repeat me-1"></i>Recurring
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@transaction.Category</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas @(GetAccountIcon(transaction.AccountType)) text-muted me-2"></i>
                                            <span>@transaction.AccountName</span>
                                        </div>
                                    </td>
                                    <td class="text-end">
                                        <span class="fw-bold @(transaction.Type == TransactionType.Credit ? "text-success" : "text-danger")">
                                            @(transaction.Type == TransactionType.Credit ? "+" : "-")@Model.GetCurrencySymbol()@transaction.Amount.ToString("N2")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        @if (transaction.HasReceipt)
                                        {
                                            <div class="dropdown">
                                                <button class="btn btn-sm btn-outline-success dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                    <i class="fas fa-paperclip"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("View", "Receipt", new { transactionId = transaction.Id })" target="_blank">
                                                            <i class="fas fa-eye me-2"></i>View Receipt
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("Download", "Receipt", new { transactionId = transaction.Id })">
                                                            <i class="fas fa-download me-2"></i>Download Receipt
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        }
                                        else
                                        {
                                            <i class="fas fa-minus text-muted" title="No receipt"></i>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a href="@Url.Action("Details", new { id = transaction.Id })" class="btn btn-sm btn-outline-primary" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No Transactions Found</h5>
                    <p class="text-muted">Try adjusting your filters or add some transactions to get started.</p>
                    <div class="mt-3">
                        <a href="@Url.Action("AddIncome")" class="btn btn-success me-2">
                            <i class="fas fa-plus me-1"></i>Add Income
                        </a>
                        <a href="@Url.Action("AddExpense")" class="btn btn-danger">
                            <i class="fas fa-minus me-1"></i>Add Expense
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.Pagination.TotalPages > 1)
    {
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Transaction pagination">
                <ul class="pagination">
                    @if (Model.Pagination.HasPrevious)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { filters = Model.Filters, page = Model.Pagination.CurrentPage - 1 })">Previous</a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { filters = Model.Filters, page = i })">@i</a>
                        </li>
                    }

                    @if (Model.Pagination.HasNext)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { filters = Model.Filters, page = Model.Pagination.CurrentPage + 1 })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

@functions {
    private string GetAccountIcon(AccountType accountType)
    {
        return accountType switch
        {
            AccountType.Checking => "fa-university",
            AccountType.Savings => "fa-piggy-bank",
            AccountType.CreditCard => "fa-credit-card",
            AccountType.Investment => "fa-chart-line",
            AccountType.Cash => "fa-money-bill-wave",
            AccountType.Loan => "fa-hand-holding-usd",
            _ => "fa-wallet"
        };
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form on filter changes
            $('.form-select, .form-check-input').on('change', function() {
                if ($(this).closest('form').find('input[type="text"]').val() === '' && 
                    $(this).closest('form').find('input[type="date"]').val() === '' &&
                    $(this).closest('form').find('input[type="number"]').val() === '') {
                    $(this).closest('form').submit();
                }
            });

            // Clear individual filters
            $('.clear-filter').on('click', function() {
                const target = $(this).data('target');
                $(target).val('').trigger('change');
            });

            // Highlight search terms in results
            const searchTerm = '@Model.Filters.SearchTerm';
            if (searchTerm) {
                $('tbody td').each(function() {
                    const text = $(this).text();
                    const highlighted = text.replace(new RegExp(searchTerm, 'gi'), '<mark>$&</mark>');
                    if (highlighted !== text) {
                        $(this).html(highlighted);
                    }
                });
            }
        });
    </script>
} 